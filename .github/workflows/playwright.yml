name: Playwright Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      TEST_MANAGER_API_HOST: ${{ secrets.TEST_MANAGER_API_HOST }}
      TEST_MANAGER_PROJECT_CODE: PLAYWR
      TEST_MANAGER_RUN_NAME: Playwright Automation - Test Run
      TEST_MANAGER_USERNAME: ${{ secrets.TEST_MANAGER_USERNAME }}
      TEST_MANAGER_PASSWORD: ${{ secrets.TEST_MANAGER_PASSWORD }}
      TEST_MANAGER_REPOSITORY_URL: https://github.com/Ariadna-Garcia/Fichap-Playwright
      TEST_MANAGER_REPOSITORY_BRANCH: main
      DEV_BASE_URL: https://api-dev.fichap.com
      TEST_BASE_URL: https://api-test.fichap.com
      TEST_ENVIRONMENT: Test
      DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}

    steps:
      - name: ðŸ“¥ Checkout repo
        uses: actions/checkout@v4

      - name: ðŸ§ª Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: ðŸ“¦ Install dependencies
        run: npm ci

      - name: ðŸŽ­ Install Playwright browsers
        run: npx playwright install --with-deps

      - name: ðŸ§ª Run Playwright tests
        run: |
          npx playwright test || true

      - name: ðŸ’¾ Save HTML report as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-html-report
          path: playwright-report

      - name: ðŸ“£ Send Discord notification
        if: always()
        run: |
          node reporters/send-discord.js "${{ github.run_id }}"
