name: Playwright Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to test'
        required: true
        default: 'test'
        type: choice
        options: [dev, test, staging]
      browsers:
        description: 'Browsers to test'
        required: true
        default: 'chromium'
        type: choice
        options: [chromium, firefox, webkit, all]

jobs: 
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: >-
          ${{
            (github.event.inputs.browsers == 'all' && fromJSON('["chromium", "firefox", "webkit"]')) ||
            (github.event.inputs.browsers && fromJSON(format('["{0}"]', github.event.inputs.browsers))) ||
            fromJSON('["chromium"]')
          }}

    steps:
      - name: üõí Checkout code
        uses: actions/checkout@v4

      - name: üîß Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: üì¶ Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps ${{ matrix.browser }}

      - name: üõ†Ô∏è Install OpenVPN
        run: sudo apt-get update && sudo apt-get install -y openvpn

      - name: üîó Connect to VPN
        run: |
          echo "${{ secrets.OPENVPN_CONFIG }}" > vpn.conf
          echo "${{ secrets.OPENVPN_USER }}" > user.txt
          echo "${{ secrets.OPENVPN_PASS }}" >> user.txt
          # Ejecuta en background y guarda el PID
          sudo openvpn --config vpn.conf --auth-user-pass user.txt --daemon
          echo "Esperando que la VPN se levante..."
          sleep 20
          # Verifica que la interfaz tun est√© activa
          ip a | grep tun || (echo "‚ùå No se levant√≥ la interfaz tun" && exit 1)

      - name: Diagn√≥stico:Mostrar configuraci√≥n VPN
        run: head -20 vpn.conf

      - name: Diagn√≥stico:Verificar log de OpenVPN
        run: cat /var/log/syslog | grep openvpn || echo "No hay log de OpenVPN"

      - name: Diagn√≥stico:Verificar interfaces de red
        run: ip a

      - name: Diagn√≥stico:Probar acceso a dashboard-test
        run: |
          echo "Probando acceso a dashboard-test..."
          curl -I https://dashboard-test.fichap.com || (echo "‚ùå No se pudo acceder a dashboard-test.fichap.com a trav√©s de la VPN" && exit 1)

      - name: üîç Debug VPN connection
        run: |
          echo "=== Interfaces de red ==="
          ip a
          echo "=== Tabla de rutas ==="
          ip route
          echo "=== DNS configurados ==="
          cat /etc/resolv.conf || echo "No se pudo leer resolv.conf"

      - name: ‚úÖ Test VPN connectivity
        run: |
          echo "Probando acceso a dashboard-test..."
          if ! curl -I --max-time 15 https://dashboard-test.fichap.com; then
            echo "‚ùå No se pudo acceder a dashboard-test.fichap.com a trav√©s de la VPN"
            exit 1
          fi

      - name: üßπ Clean previous reports
        run: |
          rm -rf playwright-report test-results

      - name: üé≠ Run Playwright tests
        run: |
          npx playwright test --project=${{ matrix.browser }} --reporter=html
        env:
          NODE_ENV: ${{ github.event.inputs.environment || 'test' }}

      - name: üóúÔ∏è Zip Playwright HTML report
        if: always()
        run: |
          test -d playwright-report || (echo "No se encontr√≥ playwright-report" && exit 1)
          mkdir -p zipped
          zip -r "zipped/playwright-report-${{ matrix.browser }}-${{ github.run_number }}.zip" playwright-report

      - name: üì§ Send ZIP to Discord
        if: always()
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          curl -X POST \
            -F "payload_json={
              \"username\": \"Playwright Reporter ü§ñ\",
              \"content\": \"üß™ Playwright HTML Report - Build #${{ github.run_number }}\\nüì¶ Navegador: ${{ matrix.browser }}\\nüìå Repo: ${{ github.repository }}\\nüåø Branch: ${{ github.ref_name }}\"
            }" \
            -F "file1=@zipped/playwright-report-${{ matrix.browser }}-${{ github.run_number }}.zip;type=application/zip" \
            "$DISCORD_WEBHOOK_URL"

